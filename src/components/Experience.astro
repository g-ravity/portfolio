---
interface Job {
  company: string;
  role: string;
  duration: string;
  description: string[];
}

const experience: Job[] = [
  {
    company: 'Dhan Yojana',
    role: 'Freelance Developer',
    duration: 'July 2024 - Present',
    description: [
      'Architected a full-scale algorithmic trading system in TypeScript/Node.js for parallel execution of multiple strategies across multiple trading accounts',
      'Built Shield, a robust Typescript package, by porting NorenApi-js library with enhanced type safety, error handling, API retries, and logging capabilities',
      'Engineered Hermes, a high-performance event service processing 900-1000 events/minute with guaranteed order execution in Node.js',
      'Developed Plotchart, a comprehensive backtesting platform for trading strategies with configurable parameters and interactive visualizations',
      'Implemented a Telegram bot for complete algo management including real-time monitoring, risk management, and system configuration',
      'Implemented a CI/CD pipeline on GCP for automated deployment, incorporating GitHub integration and Compute Engine resources',
      'Built modular microservices for strategy signals, risk management, trade execution, and order management',
    ],
  },
  {
    company: 'Railofy',
    role: 'Software Engineer',
    duration: 'Feb 2022 - June 2024',
    description: [
      'Developed and integrated scraper services for train data and live train status',
      'Development and ownership of pricing service which processes train availability data to display travel insurance offers to users',
      'Helped in resolving SEO issues, which resulted in our app being listed on 4th position for food delivery in train',
      'Planning and implementation of notification framework which includes whatsapp, email and push notifications via firebase',
      'Involved in the development of an entire database for train data via scrape and paid api flows, which included train, class, quota and PNR data for machine learning models',
      'Revamped an existing scraper service to scrape thousands of PNR data every day, with fault tolerance, type safety, IP rotation and google captcha bypass',
      'Developed WhatsApp PNR bot for PNR status, ordering food and other uses, which drives major traffic on our website',
      'Involved in integration of Railofy Travel Guarantee insurance on IRCTC',
      'Worked on infra development and platform monitoring using tools like Kafka, bullqueue, ELK stack, Grafana, ECS, S3, Docker and others',
    ],
  },
  {
    company: 'speakX (previously Yellow Class)',
    role: 'Fullstack SDE 2',
    duration: 'Aug 2020 - Jan 2022',
    description: [
      'Responsible for the complete development and maintenance of the admin panel of the platform.',
      'Improved response time of slow MongoDB queries by 50-80%',
      'Implemented custom file upload and processing system using Dropbox API,  S3 and AWS MediaConvert.',
      'Implemented Instagram reels like feature using ElasticSearch & RabbitMQ',
      'Designed a system to generate pdf certificates in Node and upload them to S3 from JSON data collected from MongoDB',
    ],
  },
];
---

<section id="experience" class="experience-section">
  <div class="experience-container">
    <h2 class="section-title"><span>Experience</span></h2>
    {
      experience.map((job, index) => (
        <div class="accordion">
          <div class="accordion-header" aria-expanded={index === 0}>
            <div>
              <h3>{job.company}</h3>
              <p>
                {job.role} | {job.duration}
              </p>
            </div>
          </div>
          <div
            class="accordion-content"
            id={`accordion-content-${index}`}
            style={`max-height: ${index === 0 ? '360px' : '0'};`}
          >
            <ul>
              {job.description.map((point) => (
                <li>{point}</li>
              ))}
            </ul>
          </div>
        </div>
      ))
    }
  </div>
</section>

<script>
  let openIndex = 0;

  function toggleAccordion(index) {
    const allContents = document.querySelectorAll('.accordion-content');
    allContents.forEach((content, idx) => {
      if (idx === index) {
        const isOpen = content.style.maxHeight !== '0px';
        content.style.maxHeight = isOpen ? '0' : `${content.scrollHeight}px`;
      } else {
        content.style.maxHeight = '0';
      }
    });
  }

  const buttons = document.querySelectorAll('.accordion-header');

  buttons.forEach((button, index) => {
    button.addEventListener('click', () => toggleAccordion(index));
  });
</script>

<style is:global>
  .experience-section {
    padding: 6rem 2rem;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .experience-container {
    max-width: 800px;
    width: 100%;
    position: relative;
    z-index: 2;
  }

  .experience-container .section-title {
    font-size: 2.5rem;
    margin-bottom: 3rem;
    text-align: center;
    color: var(--accent);
    font-family: 'Butler';
    font-weight: 800;
  }

  .experience-container .section-title span {
    position: relative;
  }

  .experience-container .section-title span::after {
    content: '';
    position: absolute;
    bottom: 2px;
    right: 0px;
    width: 120%;
    height: 10px;
    background: var(--underline);
    transform: skewX(-30deg);
  }

  .accordion {
    overflow: hidden;
  }

  .accordion-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-left: 1.5rem;
    background-color: orange;
    border-radius: 10px;
    box-sizing: border-box;
    width: 100%;
    font-size: 1rem;
    text-align: left;
    cursor: pointer;
    margin: 0.6rem 0;
  }

  .accordion-header h3 {
    margin-bottom: 0;
    font-size: 1.5rem;
  }

  .accordion-header p {
    margin-top: 9px;
    font-size: 0.9rem;
  }

  .accordion-content {
    overflow: hidden;
    transition: max-height 0.3s ease-in-out;
    max-height: 0;
    background-color: #ffcea0;
    border-radius: 10px;
  }

  .accordion-content ul {
    list-style: disc;
  }

  .accordion-content li {
    margin-bottom: 0.5rem;
  }
</style>
